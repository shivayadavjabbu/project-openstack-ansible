---
- hosts: webservers
  gather_facts: yes
  become: yes
  tasks:
  - name: Updation of Cache
    become: yes
    apt:
      update_cache: yes
      cache_valid_time: 7200
      force: yes
  - name: install pip3
    apt: name=python3-pip state=present update_cache=yes
    tags: ansible

  - name: install librerias dev
    apt: name=libssl-dev state=present
    tags: ansible

  - name: install build-essential
    apt: name=build-essential state=present
    tags: ansible

#  - name: install librerias libdev
#    apt: name=libffi-dev state=present
#   tags: ansible

#  - name: install librerias pydev
#    apt: name=python-dev state=present
#    tags: ansible

  #- name: upgrade librerias pydev
    #apt: upgrade=yes
    #tags: ansible

 # - name: install setuptools
 #   command: pip3 install setuptools
  #  tags: ansible

 # - name: upgrade setuptools
 #   command: pip3 install --upgrade setuptools
 #   tags: ansible
  - name: install nginx
    apt:
      name: nginx
      state: latest
  - name: make sure snmp is installed
    apt: name=snmp state=latest

  - name: make sure snmpd is installed
    apt: name=snmpd state=present

  - name: install python3-venv
    pip:
      name: virtualenv
      state: latest
  - name: install wheel
    pip:
      name: wheel
      state: latest
      virtualenv: /home/ubuntu/project/venv

  - name: install falsk in venv
    pip:
      name: flask
      state: latest
      virtualenv: /home/ubuntu/project/venv
  - name: install gunicorn
    pip:
      name: gunicorn
      state: latest
      virtualenv: /home/ubuntu/project/venv

  - name: copy flask app
    copy: src=./flask/flaskapp.py dest=/home/ubuntu/project/flaskapp.py
  - name: copy wsgi
    copy: src=./flask/wsgi.py dest=/home/ubuntu/project/wsgi.py
  - name: copy service
    copy: src=./flask/flask.service dest=/etc/systemd/system/flask.service
  - name: copy nginx
    copy: src=./flask/nginx.conf dest=/etc/nginx/conf.d/flask.conf
  - name: copy snmpd.conf file
    copy: src=./flask/snmpd.conf dest=/etc/snmp/snmpd.conf

  - name: restart snmpd
    service:
      name: snmpd
      state: restarted
    become: yes

  - name: restart nginx
    service:
      name: nginx
      state: restarted
  - name: systemd service start
    service:
      name: flask.service
      state: restarted

- hosts: haproxy
  become: true

  vars:
    haproxy_maxconns: 4096
    haproxy_backlog: 2
    haproxy_timeout_q: 400ms
    haproxy_timoutconnect: 5000ms
    haproxy_timeoutclient: 5000ms
    haproxy_timoutserver: 5000ms
    haproxy_http_timeout: 15s
    haproxy_balance: leastconn
    haproxy_frontend_port: 5000

  tasks:

  - name: Update cache
    become: yes
    apt:
      update_cache: yes
      cache_valid_time: 7200

  - name: Installing packages
    become: true
    apt:
      name: haproxy
      state: latest

  - name: Deploy HAProxy
    template:
      src: ./flask/haproxy.conf
      dest: "/etc/haproxy/haproxy.cfg"

  - name: restart Haproxy
    service:
      name: haproxy
      state: restarted

  - name: make sure snmp is installed
    apt: name=snmp state=latest

  - name: Installing the packages from Nginx
    become: true
    apt:
      name: nginx
      state: latest

  - name: copy nginx.conf file
    template:
     src: "./flask/nginx1.conf"
     dest: /etc/nginx/nginx.conf

  - name: restart  nginx
    service:
      name: nginx
      state: restarted


  - name: haproxy redumentary function test-1
    uri: url=http://localhost:5000/ return_content=yes
    register: html_body
  - debug: msg='{{ html_body.content }}'

  - name: haproxy redumentary function test-2
    uri: url=http://localhost:5000/ return_content=yes
    register: html_body
  - debug: msg='{{ html_body.content }}'

  - name: haproxy redumentary function test-3
    uri: url=http://localhost:5000/ return_content=yes
    register: html_body
  - debug: msg='{{ html_body.content }}'
  
  - name: haproxy redumentary function test-4
    uri: url=http://localhost:5000/ return_content=yes
    register: html_body
  - debug: msg='{{ html_body.content }}'

  - name: haproxy redumentary function test-5
    uri: url=http://localhost:5000/ return_content=yes
    register: html_body
  - debug: msg='{{ html_body.content }}'


  - name: checking snmpwalk -1
    shell: "snmpwalk -t 1 -r 1 -v2c -c public localhost:6000 iso.3.6.1.2.1.1.1.0"
    register: "output"
  - debug: var=output.stdout_lines

  - name: checking snmpwalk -2
    shell: "snmpwalk -t 1 -r 1 -v2c -c public localhost:6000 iso.3.6.1.2.1.1.1.0"
    register: "output"
  - debug: var=output.stdout_lines

  - name: checking snmp walk -3
    shell: "snmpwalk -t 1 -r 1 -v2c -c public localhost:6000 iso.3.6.1.2.1.1.1.0"
    register: "output"
  - debug: var=output.stdout_lines
  - name: checking snmpwalk -4
    shell: "snmpwalk -t 1 -r 1 -v2c -c public localhost:6000 iso.3.6.1.2.1.1.1.0"
    register: "output"
  - debug: var=output.stdout_lines
  - name: checking snmpwalk -5
    shell: "snmpwalk -t 1 -r 1 -v2c -c public localhost:6000 iso.3.6.1.2.1.1.1.0"
    register: "output"
  - debug: var=output.stdout_lines
